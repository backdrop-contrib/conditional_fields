<?php
/**
 * @file
 * Install, update and uninstall functions for the Conditional Fields module.
 */

/**
 * Implements hook_update_last_removed().
 */
function conditional_fields_update_last_removed() {
  return 7002;
}

/**
 * Adjust schema and data for new field instance identifier format.
 */
function conditional_fields_update_1000() {
  if (db_table_exists('conditional_fields')) {
    db_change_field('conditional_fields', 'dependee', 'dependee', array(
      'description' => 'The id of the dependee field instance.',
      'type' => 'varchar',
      'length' => 128,
      'not null' => TRUE,
      'default' => '',
    ));
    db_change_field('conditional_fields', 'dependent', 'dependent', array(
      'description' => 'The id of the dependent field instance.',
      'type' => 'varchar',
      'length' => 128,
      'not null' => TRUE,
      'default' => '',
    ));

    $select = db_select('conditional_fields', 'cf');
    $select->join('field_config_instance', 'dependee', 'cf.dependee = dependee.id');
    $select->join('field_config_instance', 'dependent', 'cf.dependent = dependent.id');
    $select->fields('cf', array('id', 'options', 'dependee', 'dependent'));
    $select->addField('dependee', 'field_name', 'dependee_field_name');
    $select->addField('dependee', 'entity_type', 'dependee_entity_type');
    $select->addField('dependee', 'bundle', 'dependee_bundle');
    $select->addField('dependent', 'field_name', 'dependent_field_name');
    $select->addField('dependent', 'entity_type', 'dependent_entity_type');
    $select->addField('dependent', 'bundle', 'dependent_bundle');
    $select->orderBy('cf.dependent');
    $result = $select->execute();
    foreach ($result as $conditional) {
      // Update the ID with the new format.
      db_update('conditional_fields')
        ->fields(array(
          'dependee' => $conditional->dependee_entity_type . '.' . $conditional->dependee_bundle . '.' . $conditional->dependee_field_name,
          'dependent' => $conditional->dependent_entity_type . '.' . $conditional->dependent_bundle . '.' . $conditional->dependent_field_name,
        ))
        ->condition('id', $conditional->id)
        ->execute();
    }
  }
}

/**
 * Convert configuration to use deployable CMI instead of storing in database.
 */
function conditional_fields_update_1100() {
  // Remove unneeded config file, if it exists.
  $config = config('conditional_fields.settings');
  if (!$config->isNew()) {
    $config->delete();
  }

  // Convert the database-stored configuration to CMI.
  if (db_table_exists('conditional_fields')) {
    $select = db_select('conditional_fields', 'cf');
    $select->fields('cf', array('options', 'dependee', 'dependent'));
    $select->orderBy('cf.dependent');
    $result = $select->execute();
    foreach ($result as $conditional) {
      $config = config('conditional_field.' . $conditional->dependent . '.settings');
      if ($config->isNew()) {
        $parts = explode('.', $conditional->dependent);
        $config->set('label', t('Conditionals for Field @field - Entity @entity; Bundle @bundle', array(
          '@field' => $parts[2],
          '@entity' => $parts[0],
          '@bundle' => $parts[1],
        )));
        $config->set('type', $conditional->dependent);
      }
      // Update the ID with the new format.
      $formatted_dependee = array(
        'dependee' => explode('.', $conditional->dependee)[2],
        'options' => unserialize($conditional->options),
      );
      $uuid = new Uuid();
      $config->set($uuid->generate(), $formatted_dependee);
      $config->save();
    }
    db_drop_table('conditional_fields');
  }
}
